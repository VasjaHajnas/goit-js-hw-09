{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAOF,SAASG,cAAc,SAEpCD,EAAKD,iBAAiB,UAAUG,IAC9BA,EAAMC,iBAEN,MAAMC,EAAQC,SAASL,EAAKV,MAAMgB,OAC5BC,EAAOF,SAASL,EAAKO,KAAKD,OAC1BE,EAASH,SAASL,EAAKQ,OAAOF,OAEpC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAI/BrB,EAHiBqB,EAAI,EACAL,EAAQG,EAAOE,GAGjCC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAqBxB,QAAiBC,MAAU,IAGnDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QACd,sBAAoB1B,QAAeC,MAAU,G,IAIrD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n\n    const delay = parseInt(form.delay.value);\n    const step = parseInt(form.step.value);\n    const amount = parseInt(form.amount.value);\n\n    for (let i = 0; i < amount; i++) {\n      const position = i + 1;\n      const promiseDelay = delay + step * i;\n\n      createPromise(position, promiseDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  });\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","addEventListener","form","querySelector","event","preventDefault","delay1","parseInt","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5c4ae4ea.js.map"}